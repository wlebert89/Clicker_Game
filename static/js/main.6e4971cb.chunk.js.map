{"version":3,"sources":["components/Navbar/navbar.js","components/ItemCard/itemCard.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","id","className","children","score","highscore","ItemCard","alt","name","src","image","onClick","clickItem","App","state","items","bannerText","wrong","newItems","_this","find","item","clicked","setState","map","shuffleItems","arr","i","length","j","Math","floor","random","_ref","_this2","this","navbar","itemCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"mqEAqBeA,MAlBf,SAAgBC,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,OACNH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SAASJ,EAAMM,UACvBL,EAAAC,EAAAC,cAAA,OAAKC,GAAG,cACNH,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAhB,UACUL,EAAMO,OAEhBN,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAhB,eACeL,EAAMQ,qBCFhBC,MARf,SAAkBT,GAChB,OACEC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaK,IAAKV,EAAMW,KAAMC,IAAKZ,EAAMa,MAAOC,QAASd,EAAMe,qBCwFrEC,oNAvFbC,MAAQ,CACNC,QACAX,MAAO,EACPC,UAAW,EACXW,WAAY,GACZC,OAAO,KAGTL,UAAY,SAAAX,GACV,IAAIiB,EACAd,EACAC,EAEAc,EAAKL,MAAMC,MAAMK,KAAK,SAAAC,GAAI,OAAIA,EAAKpB,KAAOA,IAAOoB,EAAKC,WACxDH,EAAKI,SAAS,CACZP,WAAY,WACZC,OAAO,IAETC,EAAWC,EAAKL,MAAMC,MAAMS,IAAI,SAAAH,GAC9B,OAAIA,EAAKpB,KAAOA,EACP,CACLA,GAAIoB,EAAKpB,GACTS,MAAOW,EAAKX,MACZY,SAAS,GAGJD,IAKThB,GAFFD,EAAQe,EAAKL,MAAMV,MAAQ,GACfe,EAAKL,MAAMT,UACTD,EAEAe,EAAKL,MAAMT,YAGzBc,EAAKI,SAAS,CACZP,WAAY,6CACZC,OAAO,IAETC,EAAWC,EAAKL,MAAMC,MAAMS,IAAI,SAAAH,GAAI,MAAK,CACvCpB,GAAIoB,EAAKpB,GACTS,MAAOW,EAAKX,MACZY,SAAS,KAEXlB,EAAQ,EACRC,EAAYc,EAAKL,MAAMT,WAGzBc,EAAKI,SAAS,CACZR,MAAOI,EAAKM,aAAaP,GACzBd,QACAC,2FAISqB,GACX,IAAK,IAAIC,EAAID,EAAIE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADHM,EAEpB,CAACP,EAAIG,GAAIH,EAAIC,IAA/BD,EAAIC,GAFkCM,EAAA,GAE9BP,EAAIG,GAF0BI,EAAA,GAIzC,OAAOP,mCAGA,IAAAQ,EAAAC,KACP,OACErC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoC,EAAD,CAAQhC,MAAO+B,KAAKrB,MAAMV,MAAOC,UAAW8B,KAAKrB,MAAMT,WAAvD,gBACAP,EAAAC,EAAAC,cAAA,OAAKC,GAAG,eACLkC,KAAKrB,MAAME,YAAc,4BAE5BlB,EAAAC,EAAAC,cAAA,OAAKC,GAAIkC,KAAKrB,MAAMG,MAAQ,uBAAyB,kBAClDkB,KAAKrB,MAAMC,MAAMS,IAAI,SAAAH,GAAI,OACxBvB,EAAAC,EAAAC,cAACqC,EAAD,CACEpC,GAAIoB,EAAKpB,GACTqC,IAAKjB,EAAKpB,GACVO,KAAMa,EAAKb,KACXE,MAAOW,EAAKX,MACZE,UAAW,kBAAMsB,EAAKtB,UAAUS,EAAKpB,kBA/EjCsC,0BCAlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.6e4971cb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n  return (\n    <div id=\"nav\">\n      <div className=\"wrapper\">\n        <div id=\"title\">{props.children}</div>\n        <div id=\"scoreboard\">\n          <span className=\"score\">\n            Score: {props.score}\n          </span>\n          <span className=\"score\">\n            High Score: {props.highscore}\n          </span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction ItemCard(props) {\n  return (\n    <div className=\"item-card\">\n      <img className=\"item-image\" alt={props.name} src={props.image} onClick={props.clickItem} />\n    </div>\n  );\n}\n\nexport default ItemCard;","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar/navbar\";\nimport ItemCard from \"./components/ItemCard/itemCard\";\nimport items from \"./items.json\";\nimport \"./app.css\"\n\nclass App extends Component {\n  state = {\n    items,\n    score: 0,\n    highscore: 0,\n    bannerText: \"\",\n    wrong: false\n  };\n\n  clickItem = id => {\n    let newItems;\n    let score;\n    let highscore;\n\n    if (this.state.items.find(item => item.id === id && !item.clicked)) {\n      this.setState({\n        bannerText: \"Correct!\",\n        wrong: false\n      });\n      newItems = this.state.items.map(item => {\n        if (item.id === id) {\n          return {\n            id: item.id,\n            image: item.image,\n            clicked: true\n          };\n        } else {\n          return item;\n        }\n      });\n      score = this.state.score + 1\n      if (score > this.state.highscore) {\n        highscore = score;\n      } else {\n        highscore = this.state.highscore;\n      }\n    } else {\n      this.setState({\n        bannerText: \"Game Over! Click another image to restart.\",\n        wrong: true\n      });\n      newItems = this.state.items.map(item => ({\n        id: item.id,\n        image: item.image,\n        clicked: false\n      }));\n      score = 0;\n      highscore = this.state.highscore\n    }\n\n    this.setState({\n      items: this.shuffleItems(newItems),\n      score,\n      highscore,\n    });\n  }\n\n  shuffleItems(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.score} highscore={this.state.highscore}>Clicker Game</Navbar>\n        <div id=\"banner-text\">\n          {this.state.bannerText || \"Click an image to begin.\"}\n        </div>\n        <div id={this.state.wrong ? \"item-container-shake\" : \"item-container\"}>\n          {this.state.items.map(item => (\n            <ItemCard\n              id={item.id}\n              key={item.id}\n              name={item.name}\n              image={item.image}\n              clickItem={() => this.clickItem(item.id)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"./reset.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}